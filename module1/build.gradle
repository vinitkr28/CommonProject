plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-android-extensions'
}


android {
    namespace 'vinit.module1'
    compileSdk 33

    println "*************** ### \$\$\$ ### ***************"
    println "rootProject:\t\t\t${project.rootProject}"
    println "rootDir:\t\t\t\t${project.rootDir}"
    println "user.dir: \t\t\t\t${System.getProperty('user.dir')}"
    println "projectDir:\t\t\t\t${project.projectDir}"


    Properties properties = new Properties()
    try {
        File credentialsFile = file("../project_credentials/credentials.properties")
        println "credentialsFile Path:\t${credentialsFile.absolutePath}"

        if (credentialsFile.exists()) println "credentialsFile: \t\texists"
        else println "credentialsFile \t\tnot exists"

        InputStream ins = new FileInputStream("${credentialsFile.absolutePath}")
        properties.load(ins)
        ins.close()

        println "properties key: \t\t${properties.keySet()}"
        println "properties Values: \t\t${properties.values()}"

        /*if (properties.containsKey("BASE_URL_EU_DEVELOPMENT"))
            println "BASE_URL_EU_DEVELOPMENT: ${properties.getProperty("BASE_URL_EU_DEVELOPMENT")}"
        else println "BASE_URL_EU_DEVELOPMENT: not exists"*/

        /*Set propertiesKeys = properties.keySet()
        for (int a=0; a<propertiesKeys.size();a++){
            println "${propertiesKeys[a]}: \t\t\t${properties.getProperty("${propertiesKeys[a]}")}"
        }*/

    } catch (Exception exception) {
        throw new GradleException("Missing credentials.properties file.\n${exception}")
    }

    println "*************** ### \$\$\$ ### ***************"

    defaultConfig {
        applicationId "vinit.module1"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false

            buildConfigField "String", "BASE_URL_EU_DEVELOPMENT", "${properties.getProperty("BASE_URL_EU_DEVELOPMENT")}"
            buildConfigField "String", "BASE_URL_CN_STAGING", "${properties.getProperty("BASE_URL_CN_STAGING")}"
            buildConfigField "String", "BASE_URL_EU_STAGING", "${properties.getProperty("BASE_URL_EU_STAGING")}"
            buildConfigField "String", "BASE_URL_CN_PRODUCTION", "${properties.getProperty("BASE_URL_CN_PRODUCTION")}"
            buildConfigField "String", "BASE_URL_US_PRODUCTION", "${properties.getProperty("BASE_URL_US_PRODUCTION")}"
            buildConfigField "String", "BASE_URL_EU_PRODUCTION", "${properties.getProperty("BASE_URL_EU_PRODUCTION")}"

            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            debuggable true


            buildConfigField "String", "BASE_URL_EU_DEVELOPMENT", "${properties.getProperty("BASE_URL_EU_DEVELOPMENT")}"
            buildConfigField "String", "BASE_URL_CN_STAGING", "${properties.getProperty("BASE_URL_CN_STAGING")}"
            buildConfigField "String", "BASE_URL_EU_STAGING", "${properties.getProperty("BASE_URL_EU_STAGING")}"
            buildConfigField "String", "BASE_URL_CN_PRODUCTION","${properties.getProperty("BASE_URL_CN_PRODUCTION")}"
            buildConfigField "String", "BASE_URL_US_PRODUCTION", "${properties.getProperty("BASE_URL_US_PRODUCTION")}"
            buildConfigField "String", "BASE_URL_EU_PRODUCTION", "${properties.getProperty("BASE_URL_EU_PRODUCTION")}"
            //noinspection GradlePath
            applicationIdSuffix 'id_module1_debug'
            versionNameSuffix 'version_name_module1_debug'
            signingConfig signingConfigs.debug
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'


    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'


    def room_version = "2.4.3"

    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
}