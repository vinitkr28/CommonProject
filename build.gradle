// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    /*repositories {
        google()
        mavenCentral()

    }*/
    dependencies {
        classpath "com.dicedmelon.gradle:jacoco-android:0.1.4"
        classpath "org.jacoco:org.jacoco.core:0.8.7"
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:3.4.0.2513"

    }

    println "*************** ### \$START[Project build.gradle]\$ ### ***************"
    Properties properties = new Properties()
    try {
        File credentialsFile = file("/project_credentials/pkg_versions.properties")
        println "pkg_versions Path:\t${credentialsFile.absolutePath}"

        if (credentialsFile.exists()) println "pkg_versions: \t\texists"
        else println "pkg_versions: \t\tnot exists"

        InputStream ins = new FileInputStream("${credentialsFile.absolutePath}")
        properties.load(ins)
        ins.close()

        println "properties key: \t${properties.keySet()}"
        println "properties Value: \t${properties.values()}"

        /*Set propertiesKeys = properties.keySet()
        for (int a=0; a<propertiesKeys.size();a++){
            println "${propertiesKeys[a]}: \t\t${properties.getProperty("${propertiesKeys[a]}")}"
        }*/

    } catch (Exception exception) {
        throw new GradleException("Missing pkg_versions.properties file.\n${exception}")
    }
    println "*************** ### \$END[Project build.gradle]\$ ### ***************"

    project.ext {
        defaultPublishConfig = "release"
        minSdkVersion = "${properties.getProperty("minSdk")}".toInteger()
        targetSdkVersion = "${properties.getProperty("compileSdk")}".toInteger()
        compileSdkVersion = "${properties.getProperty("compileSdk")}".toInteger()
    }

    project.logger.debug("*************** ### \$[Project build.gradle]\$ ### ***************")
}


plugins {
    id 'com.android.application' version '7.3.1' apply false
    id 'com.android.library' version '7.3.1' apply false
    id 'org.jetbrains.kotlin.android' version '1.7.20' apply false
    id "org.sonarqube" version "3.4.0.2513"
    id 'org.jetbrains.kotlin.jvm' version '1.7.20' apply false
}

sonarqube {
    properties {
        property "sonar.projectName", "Common Project"
        property "sonar.projectKey", "CommonProject"
        property "sonar.host.url", "http://localhost:9000"
        property "sonar.login", "b75270993d772b4cc408b083cfa12417cba94e0e"
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}